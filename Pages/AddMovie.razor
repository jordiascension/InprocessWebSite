@page "/movie/add"
@page "/movie/edit/{movieId:int}"
@using InprocessWebSite.Data
@inject IMovieService movieService
@inject NavigationManager NavigationManager

<h1>@Title Movie</h1>
<hr />
<EditForm Model="@movie" OnValidSubmit="SaveMovie">
    <div class="mb-3">
        <label for="Title" class="form-label">Title</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="movie.Title" />
        </div>     
    </div>
    <div class="mb-3">
        <label for="Genre" class="form-label">Genre</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="movie.Genre" />
        </div>
    </div>
    <div class="mb-3">
        <label for="ReleaseDate" class="form-label">Release Date</label>
        <div class="col-md-4">
            <InputDate class="form-control" @bind-Value=movie.ReleaseDate />
        </div>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>

</EditForm>

@code {
    [Parameter]
    public int movieId { get; set; }
    protected string Title = "Add";
    protected Movie? movie = new();

    protected override async Task OnParametersSetAsync()
    {
        if (movieId != 0)
        {
            Title = "Edit";
            movie = await movieService.GetMovieByIdAsync(movieId);
        }
    }
    protected async Task SaveMovie()
    {
        if (movie.Id != 0)
        {
            //await Http.PutAsJsonAsync("api/User", user);
            var movieUpdated = await movieService.UpdateMovieAsync(movie);
        }
        else
        {
            var movieInserted = await movieService.AddMovieAsync(movie);
            //await Http.PostAsJsonAsync("api/User", movie);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }
}
